// Str replace 

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


//Font mixin 

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf) {
  $src: null;

  $extmods: (
    eot: "?"
  );

  $formats: (
  	otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@function get-line-height($font-size, $line-height) {
   @return $line-height / $font-size;
}  

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin breakpoint($point){
  @if $point == large {
    @media (max-width: 1199px) { @content; }
  }
  @else if $point ==  medium {
    @media (max-width: 1024px)  { @content; }
  }
  @else if $point ==  small {
    @media (max-width: 767px)  { @content; }
  }
  @else if $point ==  mobile {
    @media (max-width: 479px)  { @content; }
  }
}

@mixin vertical-center{
  &:before {
    content: "";
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}


